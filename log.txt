@@Hoge
##### piyo (adb implstub/testdata/src/a.DB, db implstub/src/b.DB) (error)
##### yey (msg string, id int64) (string, error)
pkgPath: implstub/src/
&types.Tuple{
    vars: {
        &types.Var{
            object: types.object{
                parent: &types.Scope{
                    parent: &types.Scope{
                        parent: &types.Scope{
                            parent: &types.Scope{
                                parent:   (*types.Scope)(nil),
                                children: nil,
                                elems:    {
                                    "append": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "append",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 0,
                                    },
                                    "bool": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "bool",
                                            typ:       &types.Basic{kind:1, info:1, name:"bool"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "byte": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "byte",
                                            typ:       &types.Basic{kind:8, info:6, name:"byte"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "cap": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "cap",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 1,
                                    },
                                    "close": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "close",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 2,
                                    },
                                    "complex": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "complex",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 3,
                                    },
                                    "complex128": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "complex128",
                                            typ:       &types.Basic{kind:16, info:16, name:"complex128"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "complex64": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "complex64",
                                            typ:       &types.Basic{kind:15, info:16, name:"complex64"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "copy": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "copy",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 4,
                                    },
                                    "delete": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "delete",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 5,
                                    },
                                    "error": &types.TypeName{
                                        object: types.object{
                                            parent: &types.Scope{(CYCLIC REFERENCE)},
                                            pos:    0,
                                            pkg:    (*types.Package)(nil),
                                            name:   "error",
                                            typ:    &types.Named{
                                                info:       0x0,
                                                obj:        &types.TypeName{(CYCLIC REFERENCE)},
                                                orig:       nil,
                                                underlying: &types.Interface{
                                                    methods: {
                                                        &!%v(DEPTH EXCEEDED),
                                                    },
                                                    embeddeds:  nil,
                                                    allMethods: {
                                                        &!%v(DEPTH EXCEEDED),
                                                    },
                                                },
                                                methods: nil,
                                            },
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "false": &types.Const{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "false",
                                            typ:       &types.Basic{kind:19, info:65, name:"untyped bool"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        val: constant.boolVal(false),
                                    },
                                    "float32": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "float32",
                                            typ:       &types.Basic{kind:13, info:8, name:"float32"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "float64": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "float64",
                                            typ:       &types.Basic{kind:14, info:8, name:"float64"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "imag": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "imag",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 6,
                                    },
                                    "int": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "int",
                                            typ:       &types.Basic{kind:2, info:2, name:"int"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "int16": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "int16",
                                            typ:       &types.Basic{kind:4, info:2, name:"int16"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "int32": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "int32",
                                            typ:       &types.Basic{kind:5, info:2, name:"int32"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "int64": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "int64",
                                            typ:       &types.Basic{kind:6, info:2, name:"int64"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "int8": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "int8",
                                            typ:       &types.Basic{kind:3, info:2, name:"int8"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "iota": &types.Const{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "iota",
                                            typ:       &types.Basic{kind:20, info:66, name:"untyped int"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        val: constant.int64Val(0),
                                    },
                                    "len": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "len",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 7,
                                    },
                                    "make": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "make",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 8,
                                    },
                                    "new": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "new",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 9,
                                    },
                                    "nil": &types.Nil{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "nil",
                                            typ:       &types.Basic{kind:25, info:64, name:"untyped nil"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "panic": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "panic",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 10,
                                    },
                                    "print": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "print",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 11,
                                    },
                                    "println": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "println",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 12,
                                    },
                                    "real": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "real",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 13,
                                    },
                                    "recover": &types.Builtin{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "recover",
                                            typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        id: 14,
                                    },
                                    "rune": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "rune",
                                            typ:       &types.Basic{kind:5, info:2, name:"rune"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "string": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "string",
                                            typ:       &types.Basic{kind:17, info:32, name:"string"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "true": &types.Const{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "true",
                                            typ:       &types.Basic{kind:19, info:65, name:"untyped bool"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        val: constant.boolVal(true),
                                    },
                                    "uint": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "uint",
                                            typ:       &types.Basic{kind:7, info:6, name:"uint"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "uint16": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "uint16",
                                            typ:       &types.Basic{kind:9, info:6, name:"uint16"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "uint32": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "uint32",
                                            typ:       &types.Basic{kind:10, info:6, name:"uint32"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "uint64": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "uint64",
                                            typ:       &types.Basic{kind:11, info:6, name:"uint64"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "uint8": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "uint8",
                                            typ:       &types.Basic{kind:8, info:6, name:"uint8"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    "uintptr": &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       (*types.Package)(nil),
                                            name:      "uintptr",
                                            typ:       &types.Basic{kind:12, info:6, name:"uintptr"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                },
                                pos:     0,
                                end:     0,
                                comment: "universe",
                                isFunc:  false,
                            },
                            children: {
                                &types.Scope{(CYCLIC REFERENCE)},
                            },
                            elems: {
                                "DB": &types.TypeName{
                                    object: types.object{
                                        parent: &types.Scope{(CYCLIC REFERENCE)},
                                        pos:    66196,
                                        pkg:    &types.Package{
                                            path:     "implstub/src/b",
                                            name:     "b",
                                            scope:    &types.Scope{(CYCLIC REFERENCE)},
                                            complete: true,
                                            imports:  {
                                                &types.Package{
                                                    path:  "implstub/testdata/src/a",
                                                    name:  "a",
                                                    scope: &types.Scope{
                                                        parent:   &!%v(DEPTH EXCEEDED),
                                                        children: nil,
                                                        elems:    {
                                                            ".inittask": !%v(DEPTH EXCEEDED),
                                                            "DB":        !%v(DEPTH EXCEEDED),
                                                        },
                                                        pos:     0,
                                                        end:     0,
                                                        comment: "package \"implstub/testdata/src/a\"",
                                                        isFunc:  false,
                                                    },
                                                    complete: true,
                                                    imports:  nil,
                                                    fake:     false,
                                                    cgo:      false,
                                                },
                                            },
                                            fake: false,
                                            cgo:  false,
                                        },
                                        name: "DB",
                                        typ:  &types.Named{
                                            info:       0x2,
                                            obj:        &types.TypeName{(CYCLIC REFERENCE)},
                                            orig:       &types.Struct{},
                                            underlying: &types.Struct{},
                                            methods:    {
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    66009,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "yey",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x3,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    66113,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "piyo",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x4,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                            },
                                        },
                                        order_:    0x5,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "Hoge": &types.TypeName{
                                    object: types.object{
                                        parent: &types.Scope{(CYCLIC REFERENCE)},
                                        pos:    65756,
                                        pkg:    &types.Package{
                                            path:     "implstub/src/b",
                                            name:     "b",
                                            scope:    &types.Scope{(CYCLIC REFERENCE)},
                                            complete: true,
                                            imports:  {
                                                &types.Package{
                                                    path:  "implstub/testdata/src/a",
                                                    name:  "a",
                                                    scope: &types.Scope{
                                                        parent:   &!%v(DEPTH EXCEEDED),
                                                        children: nil,
                                                        elems:    {
                                                            ".inittask": !%v(DEPTH EXCEEDED),
                                                            "DB":        !%v(DEPTH EXCEEDED),
                                                        },
                                                        pos:     0,
                                                        end:     0,
                                                        comment: "package \"implstub/testdata/src/a\"",
                                                        isFunc:  false,
                                                    },
                                                    complete: true,
                                                    imports:  nil,
                                                    fake:     false,
                                                    cgo:      false,
                                                },
                                            },
                                            fake: false,
                                            cgo:  false,
                                        },
                                        name: "Hoge",
                                        typ:  &types.Named{
                                            info: 0x2,
                                            obj:  &types.TypeName{(CYCLIC REFERENCE)},
                                            orig: &types.Interface{
                                                methods: {
                                                    &types.Func{
                                                        object: types.object{
                                                            parent:    (*types.Scope)(nil),
                                                            pos:       65817,
                                                            pkg:       &!%v(DEPTH EXCEEDED),
                                                            name:      "piyo",
                                                            typ:       &!%v(DEPTH EXCEEDED),
                                                            order_:    0x0,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                    &types.Func{
                                                        object: types.object{
                                                            parent:    (*types.Scope)(nil),
                                                            pos:       65774,
                                                            pkg:       &!%v(DEPTH EXCEEDED),
                                                            name:      "yey",
                                                            typ:       &!%v(DEPTH EXCEEDED),
                                                            order_:    0x0,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                },
                                                embeddeds:  nil,
                                                allMethods: {
                                                    &types.Func{
                                                        object: types.object{
                                                            parent:    (*types.Scope)(nil),
                                                            pos:       65817,
                                                            pkg:       &!%v(DEPTH EXCEEDED),
                                                            name:      "piyo",
                                                            typ:       &!%v(DEPTH EXCEEDED),
                                                            order_:    0x0,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                    &types.Func{
                                                        object: types.object{
                                                            parent:    (*types.Scope)(nil),
                                                            pos:       65774,
                                                            pkg:       &!%v(DEPTH EXCEEDED),
                                                            name:      "yey",
                                                            typ:       &!%v(DEPTH EXCEEDED),
                                                            order_:    0x0,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                },
                                            },
                                            underlying: &types.Interface{
                                                methods: {
                                                    &types.Func{
                                                        object: types.object{
                                                            parent:    (*types.Scope)(nil),
                                                            pos:       65817,
                                                            pkg:       &!%v(DEPTH EXCEEDED),
                                                            name:      "piyo",
                                                            typ:       &!%v(DEPTH EXCEEDED),
                                                            order_:    0x0,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                    &types.Func{
                                                        object: types.object{
                                                            parent:    (*types.Scope)(nil),
                                                            pos:       65774,
                                                            pkg:       &!%v(DEPTH EXCEEDED),
                                                            name:      "yey",
                                                            typ:       &!%v(DEPTH EXCEEDED),
                                                            order_:    0x0,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                },
                                                embeddeds:  nil,
                                                allMethods: {
                                                    &types.Func{
                                                        object: types.object{
                                                            parent:    (*types.Scope)(nil),
                                                            pos:       65817,
                                                            pkg:       &!%v(DEPTH EXCEEDED),
                                                            name:      "piyo",
                                                            typ:       &!%v(DEPTH EXCEEDED),
                                                            order_:    0x0,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                    &types.Func{
                                                        object: types.object{
                                                            parent:    (*types.Scope)(nil),
                                                            pos:       65774,
                                                            pkg:       &!%v(DEPTH EXCEEDED),
                                                            name:      "yey",
                                                            typ:       &!%v(DEPTH EXCEEDED),
                                                            order_:    0x0,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                },
                                            },
                                            methods: nil,
                                        },
                                        order_:    0x1,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "f": &types.Func{
                                    object: types.object{
                                        parent: &types.Scope{(CYCLIC REFERENCE)},
                                        pos:    65853,
                                        pkg:    &types.Package{
                                            path:     "implstub/src/b",
                                            name:     "b",
                                            scope:    &types.Scope{(CYCLIC REFERENCE)},
                                            complete: true,
                                            imports:  {
                                                &types.Package{
                                                    path:  "implstub/testdata/src/a",
                                                    name:  "a",
                                                    scope: &types.Scope{
                                                        parent:   &!%v(DEPTH EXCEEDED),
                                                        children: nil,
                                                        elems:    {
                                                            ".inittask": !%v(DEPTH EXCEEDED),
                                                            "DB":        !%v(DEPTH EXCEEDED),
                                                        },
                                                        pos:     0,
                                                        end:     0,
                                                        comment: "package \"implstub/testdata/src/a\"",
                                                        isFunc:  false,
                                                    },
                                                    complete: true,
                                                    imports:  nil,
                                                    fake:     false,
                                                    cgo:      false,
                                                },
                                            },
                                            fake: false,
                                            cgo:  false,
                                        },
                                        name: "f",
                                        typ:  &types.Signature{
                                            scope: &types.Scope{
                                                parent:   &types.Scope{(CYCLIC REFERENCE)},
                                                children: nil,
                                                elems:    {
                                                    "gopher": &!%v(DEPTH EXCEEDED),
                                                },
                                                pos:     65857,
                                                end:     65995,
                                                comment: "function",
                                                isFunc:  true,
                                            },
                                            recv:     (*types.Var)(nil),
                                            params:   (*types.Tuple)(nil),
                                            results:  (*types.Tuple)(nil),
                                            variadic: false,
                                        },
                                        order_:    0x2,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    hasPtrRecv: false,
                                },
                            },
                            pos:     0,
                            end:     0,
                            comment: "package \"implstub/src/b\"",
                            isFunc:  false,
                        },
                        children: {
                            &types.Scope{
                                parent:   &types.Scope{(CYCLIC REFERENCE)},
                                children: nil,
                                elems:    {
                                    "id": &types.Var{
                                        object: types.object{
                                            parent: &types.Scope{(CYCLIC REFERENCE)},
                                            pos:    65790,
                                            pkg:    &types.Package{
                                                path:     "implstub/src/b",
                                                name:     "b",
                                                scope:    &types.Scope{(CYCLIC REFERENCE)},
                                                complete: true,
                                                imports:  {
                                                    &types.Package{
                                                        path:  "implstub/testdata/src/a",
                                                        name:  "a",
                                                        scope: &types.Scope{
                                                            parent:   &!%v(DEPTH EXCEEDED),
                                                            children: nil,
                                                            elems:    {
                                                                ".inittask": !%v(DEPTH EXCEEDED),
                                                                "DB":        !%v(DEPTH EXCEEDED),
                                                            },
                                                            pos:     0,
                                                            end:     0,
                                                            comment: "package \"implstub/testdata/src/a\"",
                                                            isFunc:  false,
                                                        },
                                                        complete: true,
                                                        imports:  nil,
                                                        fake:     false,
                                                        cgo:      false,
                                                    },
                                                },
                                                fake: false,
                                                cgo:  false,
                                            },
                                            name:      "id",
                                            typ:       &types.Basic{kind:6, info:2, name:"int64"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                    "msg": &types.Var{
                                        object: types.object{
                                            parent: &types.Scope{(CYCLIC REFERENCE)},
                                            pos:    65778,
                                            pkg:    &types.Package{
                                                path:     "implstub/src/b",
                                                name:     "b",
                                                scope:    &types.Scope{(CYCLIC REFERENCE)},
                                                complete: true,
                                                imports:  {
                                                    &types.Package{
                                                        path:  "implstub/testdata/src/a",
                                                        name:  "a",
                                                        scope: &types.Scope{
                                                            parent:   &!%v(DEPTH EXCEEDED),
                                                            children: nil,
                                                            elems:    {
                                                                ".inittask": !%v(DEPTH EXCEEDED),
                                                                "DB":        !%v(DEPTH EXCEEDED),
                                                            },
                                                            pos:     0,
                                                            end:     0,
                                                            comment: "package \"implstub/testdata/src/a\"",
                                                            isFunc:  false,
                                                        },
                                                        complete: true,
                                                        imports:  nil,
                                                        fake:     false,
                                                        cgo:      false,
                                                    },
                                                },
                                                fake: false,
                                                cgo:  false,
                                            },
                                            name:      "msg",
                                            typ:       &types.Basic{kind:17, info:32, name:"string"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                },
                                pos:     0,
                                end:     0,
                                comment: "function",
                                isFunc:  true,
                            },
                            &types.Scope{(CYCLIC REFERENCE)},
                            &types.Scope{
                                parent:   &types.Scope{(CYCLIC REFERENCE)},
                                children: nil,
                                elems:    {
                                    "gopher": &types.Var{
                                        object: types.object{
                                            parent: &types.Scope{(CYCLIC REFERENCE)},
                                            pos:    65918,
                                            pkg:    &types.Package{
                                                path:     "implstub/src/b",
                                                name:     "b",
                                                scope:    &types.Scope{(CYCLIC REFERENCE)},
                                                complete: true,
                                                imports:  {
                                                    &types.Package{
                                                        path:  "implstub/testdata/src/a",
                                                        name:  "a",
                                                        scope: &types.Scope{
                                                            parent:   &!%v(DEPTH EXCEEDED),
                                                            children: nil,
                                                            elems:    {
                                                                ".inittask": !%v(DEPTH EXCEEDED),
                                                                "DB":        !%v(DEPTH EXCEEDED),
                                                            },
                                                            pos:     0,
                                                            end:     0,
                                                            comment: "package \"implstub/testdata/src/a\"",
                                                            isFunc:  false,
                                                        },
                                                        complete: true,
                                                        imports:  nil,
                                                        fake:     false,
                                                        cgo:      false,
                                                    },
                                                },
                                                fake: false,
                                                cgo:  false,
                                            },
                                            name:      "gopher",
                                            typ:       &types.Basic{kind:2, info:2, name:"int"},
                                            order_:    0x0,
                                            color_:    0x0,
                                            scopePos_: 65928,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                },
                                pos:     65857,
                                end:     65995,
                                comment: "function",
                                isFunc:  true,
                            },
                            &types.Scope{
                                parent:   &types.Scope{(CYCLIC REFERENCE)},
                                children: nil,
                                elems:    {
                                    "d": &types.Var{
                                        object: types.object{
                                            parent: &types.Scope{(CYCLIC REFERENCE)},
                                            pos:    66003,
                                            pkg:    &types.Package{
                                                path:     "implstub/src/b",
                                                name:     "b",
                                                scope:    &types.Scope{(CYCLIC REFERENCE)},
                                                complete: true,
                                                imports:  {
                                                    &types.Package{
                                                        path:  "implstub/testdata/src/a",
                                                        name:  "a",
                                                        scope: &types.Scope{
                                                            parent:   &!%v(DEPTH EXCEEDED),
                                                            children: nil,
                                                            elems:    {
                                                                ".inittask": !%v(DEPTH EXCEEDED),
                                                                "DB":        !%v(DEPTH EXCEEDED),
                                                            },
                                                            pos:     0,
                                                            end:     0,
                                                            comment: "package \"implstub/testdata/src/a\"",
                                                            isFunc:  false,
                                                        },
                                                        complete: true,
                                                        imports:  nil,
                                                        fake:     false,
                                                        cgo:      false,
                                                    },
                                                },
                                                fake: false,
                                                cgo:  false,
                                            },
                                            name: "d",
                                            typ:  &types.Named{
                                                info:       0x2,
                                                obj:        &types.TypeName{(CYCLIC REFERENCE)},
                                                orig:       &types.Struct{},
                                                underlying: &types.Struct{},
                                                methods:    {
                                                    &types.Func{
                                                        object: types.object{
                                                            parent: (*types.Scope)(nil),
                                                            pos:    66009,
                                                            pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                            name:   "yey",
                                                            typ:    &types.Signature{
                                                                scope:    &!%v(DEPTH EXCEEDED),
                                                                recv:     &!%v(DEPTH EXCEEDED),
                                                                params:   &!%v(DEPTH EXCEEDED),
                                                                results:  &!%v(DEPTH EXCEEDED),
                                                                variadic: false,
                                                            },
                                                            order_:    0x3,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                    &types.Func{
                                                        object: types.object{
                                                            parent: (*types.Scope)(nil),
                                                            pos:    66113,
                                                            pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                            name:   "piyo",
                                                            typ:    &types.Signature{
                                                                scope:    &!%v(DEPTH EXCEEDED),
                                                                recv:     &!%v(DEPTH EXCEEDED),
                                                                params:   &!%v(DEPTH EXCEEDED),
                                                                results:  &!%v(DEPTH EXCEEDED),
                                                                variadic: false,
                                                            },
                                                            order_:    0x4,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                },
                                            },
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                    "id": &types.Var{
                                        object: types.object{
                                            parent: &types.Scope{(CYCLIC REFERENCE)},
                                            pos:    66025,
                                            pkg:    &types.Package{
                                                path:     "implstub/src/b",
                                                name:     "b",
                                                scope:    &types.Scope{(CYCLIC REFERENCE)},
                                                complete: true,
                                                imports:  {
                                                    &types.Package{
                                                        path:  "implstub/testdata/src/a",
                                                        name:  "a",
                                                        scope: &types.Scope{
                                                            parent:   &!%v(DEPTH EXCEEDED),
                                                            children: nil,
                                                            elems:    {
                                                                ".inittask": !%v(DEPTH EXCEEDED),
                                                                "DB":        !%v(DEPTH EXCEEDED),
                                                            },
                                                            pos:     0,
                                                            end:     0,
                                                            comment: "package \"implstub/testdata/src/a\"",
                                                            isFunc:  false,
                                                        },
                                                        complete: true,
                                                        imports:  nil,
                                                        fake:     false,
                                                        cgo:      false,
                                                    },
                                                },
                                                fake: false,
                                                cgo:  false,
                                            },
                                            name:      "id",
                                            typ:       &types.Basic{kind:6, info:2, name:"int64"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                    "msg": &types.Var{
                                        object: types.object{
                                            parent: &types.Scope{(CYCLIC REFERENCE)},
                                            pos:    66013,
                                            pkg:    &types.Package{
                                                path:     "implstub/src/b",
                                                name:     "b",
                                                scope:    &types.Scope{(CYCLIC REFERENCE)},
                                                complete: true,
                                                imports:  {
                                                    &types.Package{
                                                        path:  "implstub/testdata/src/a",
                                                        name:  "a",
                                                        scope: &types.Scope{
                                                            parent:   &!%v(DEPTH EXCEEDED),
                                                            children: nil,
                                                            elems:    {
                                                                ".inittask": !%v(DEPTH EXCEEDED),
                                                                "DB":        !%v(DEPTH EXCEEDED),
                                                            },
                                                            pos:     0,
                                                            end:     0,
                                                            comment: "package \"implstub/testdata/src/a\"",
                                                            isFunc:  false,
                                                        },
                                                        complete: true,
                                                        imports:  nil,
                                                        fake:     false,
                                                        cgo:      false,
                                                    },
                                                },
                                                fake: false,
                                                cgo:  false,
                                            },
                                            name:      "msg",
                                            typ:       &types.Basic{kind:17, info:32, name:"string"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                },
                                pos:     66051,
                                end:     66099,
                                comment: "function",
                                isFunc:  true,
                            },
                            &types.Scope{
                                parent:   &types.Scope{(CYCLIC REFERENCE)},
                                children: nil,
                                elems:    {
                                    "adb": &types.Var{
                                        object: types.object{
                                            parent: &types.Scope{(CYCLIC REFERENCE)},
                                            pos:    66118,
                                            pkg:    &types.Package{
                                                path:     "implstub/src/b",
                                                name:     "b",
                                                scope:    &types.Scope{(CYCLIC REFERENCE)},
                                                complete: true,
                                                imports:  {
                                                    &types.Package{
                                                        path:  "implstub/testdata/src/a",
                                                        name:  "a",
                                                        scope: &types.Scope{
                                                            parent:   &!%v(DEPTH EXCEEDED),
                                                            children: nil,
                                                            elems:    {
                                                                ".inittask": !%v(DEPTH EXCEEDED),
                                                                "DB":        !%v(DEPTH EXCEEDED),
                                                            },
                                                            pos:     0,
                                                            end:     0,
                                                            comment: "package \"implstub/testdata/src/a\"",
                                                            isFunc:  false,
                                                        },
                                                        complete: true,
                                                        imports:  nil,
                                                        fake:     false,
                                                        cgo:      false,
                                                    },
                                                },
                                                fake: false,
                                                cgo:  false,
                                            },
                                            name: "adb",
                                            typ:  &types.Named{
                                                info: 0x0,
                                                obj:  &types.TypeName{
                                                    object: types.object{
                                                        parent: &types.Scope{
                                                            parent:   &!%v(DEPTH EXCEEDED),
                                                            children: nil,
                                                            elems:    {
                                                                ".inittask": !%v(DEPTH EXCEEDED),
                                                                "DB":        !%v(DEPTH EXCEEDED),
                                                            },
                                                            pos:     0,
                                                            end:     0,
                                                            comment: "package \"implstub/testdata/src/a\"",
                                                            isFunc:  false,
                                                        },
                                                        pos:       168,
                                                        pkg:       &types.Package{(CYCLIC REFERENCE)},
                                                        name:      "DB",
                                                        typ:       &types.Named{(CYCLIC REFERENCE)},
                                                        order_:    0x0,
                                                        color_:    0x0,
                                                        scopePos_: 0,
                                                    },
                                                },
                                                orig:       nil,
                                                underlying: &types.Struct{
                                                    fields: {
                                                    },
                                                    tags: {},
                                                },
                                                methods: nil,
                                            },
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                    "d": &types.Var{
                                        object: types.object{
                                            parent: &types.Scope{(CYCLIC REFERENCE)},
                                            pos:    66107,
                                            pkg:    &types.Package{
                                                path:     "implstub/src/b",
                                                name:     "b",
                                                scope:    &types.Scope{(CYCLIC REFERENCE)},
                                                complete: true,
                                                imports:  {
                                                    &types.Package{
                                                        path:  "implstub/testdata/src/a",
                                                        name:  "a",
                                                        scope: &types.Scope{
                                                            parent:   &!%v(DEPTH EXCEEDED),
                                                            children: nil,
                                                            elems:    {
                                                                ".inittask": !%v(DEPTH EXCEEDED),
                                                                "DB":        !%v(DEPTH EXCEEDED),
                                                            },
                                                            pos:     0,
                                                            end:     0,
                                                            comment: "package \"implstub/testdata/src/a\"",
                                                            isFunc:  false,
                                                        },
                                                        complete: true,
                                                        imports:  nil,
                                                        fake:     false,
                                                        cgo:      false,
                                                    },
                                                },
                                                fake: false,
                                                cgo:  false,
                                            },
                                            name: "d",
                                            typ:  &types.Named{
                                                info:       0x2,
                                                obj:        &types.TypeName{(CYCLIC REFERENCE)},
                                                orig:       &types.Struct{},
                                                underlying: &types.Struct{},
                                                methods:    {
                                                    &types.Func{
                                                        object: types.object{
                                                            parent: (*types.Scope)(nil),
                                                            pos:    66009,
                                                            pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                            name:   "yey",
                                                            typ:    &types.Signature{
                                                                scope:    &!%v(DEPTH EXCEEDED),
                                                                recv:     &!%v(DEPTH EXCEEDED),
                                                                params:   &!%v(DEPTH EXCEEDED),
                                                                results:  &!%v(DEPTH EXCEEDED),
                                                                variadic: false,
                                                            },
                                                            order_:    0x3,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                    &types.Func{
                                                        object: types.object{
                                                            parent: (*types.Scope)(nil),
                                                            pos:    66113,
                                                            pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                            name:   "piyo",
                                                            typ:    &types.Signature{
                                                                scope:    &!%v(DEPTH EXCEEDED),
                                                                recv:     &!%v(DEPTH EXCEEDED),
                                                                params:   &!%v(DEPTH EXCEEDED),
                                                                results:  &!%v(DEPTH EXCEEDED),
                                                                variadic: false,
                                                            },
                                                            order_:    0x4,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                },
                                            },
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                    "db": &types.Var{
                                        object: types.object{
                                            parent: &types.Scope{(CYCLIC REFERENCE)},
                                            pos:    66128,
                                            pkg:    &types.Package{
                                                path:     "implstub/src/b",
                                                name:     "b",
                                                scope:    &types.Scope{(CYCLIC REFERENCE)},
                                                complete: true,
                                                imports:  {
                                                    &types.Package{
                                                        path:  "implstub/testdata/src/a",
                                                        name:  "a",
                                                        scope: &types.Scope{
                                                            parent:   &!%v(DEPTH EXCEEDED),
                                                            children: nil,
                                                            elems:    {
                                                                ".inittask": !%v(DEPTH EXCEEDED),
                                                                "DB":        !%v(DEPTH EXCEEDED),
                                                            },
                                                            pos:     0,
                                                            end:     0,
                                                            comment: "package \"implstub/testdata/src/a\"",
                                                            isFunc:  false,
                                                        },
                                                        complete: true,
                                                        imports:  nil,
                                                        fake:     false,
                                                        cgo:      false,
                                                    },
                                                },
                                                fake: false,
                                                cgo:  false,
                                            },
                                            name: "db",
                                            typ:  &types.Named{
                                                info:       0x2,
                                                obj:        &types.TypeName{(CYCLIC REFERENCE)},
                                                orig:       &types.Struct{},
                                                underlying: &types.Struct{},
                                                methods:    {
                                                    &types.Func{
                                                        object: types.object{
                                                            parent: (*types.Scope)(nil),
                                                            pos:    66009,
                                                            pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                            name:   "yey",
                                                            typ:    &types.Signature{
                                                                scope:    &!%v(DEPTH EXCEEDED),
                                                                recv:     &!%v(DEPTH EXCEEDED),
                                                                params:   &!%v(DEPTH EXCEEDED),
                                                                results:  &!%v(DEPTH EXCEEDED),
                                                                variadic: false,
                                                            },
                                                            order_:    0x3,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                    &types.Func{
                                                        object: types.object{
                                                            parent: (*types.Scope)(nil),
                                                            pos:    66113,
                                                            pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                            name:   "piyo",
                                                            typ:    &types.Signature{
                                                                scope:    &!%v(DEPTH EXCEEDED),
                                                                recv:     &!%v(DEPTH EXCEEDED),
                                                                params:   &!%v(DEPTH EXCEEDED),
                                                                results:  &!%v(DEPTH EXCEEDED),
                                                                variadic: false,
                                                            },
                                                            order_:    0x4,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                },
                                            },
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                },
                                pos:     66141,
                                end:     66189,
                                comment: "function",
                                isFunc:  true,
                            },
                        },
                        elems: {
                            "a": &types.PkgName{
                                object: types.object{
                                    parent: &types.Scope{(CYCLIC REFERENCE)},
                                    pos:    65722,
                                    pkg:    &types.Package{
                                        path:     "implstub/src/b",
                                        name:     "b",
                                        scope:    &types.Scope{(CYCLIC REFERENCE)},
                                        complete: true,
                                        imports:  {
                                            &types.Package{
                                                path:  "implstub/testdata/src/a",
                                                name:  "a",
                                                scope: &types.Scope{
                                                    parent:   &types.Scope{(CYCLIC REFERENCE)},
                                                    children: nil,
                                                    elems:    {
                                                        ".inittask": &!%v(DEPTH EXCEEDED),
                                                        "DB":        &!%v(DEPTH EXCEEDED),
                                                    },
                                                    pos:     0,
                                                    end:     0,
                                                    comment: "package \"implstub/testdata/src/a\"",
                                                    isFunc:  false,
                                                },
                                                complete: true,
                                                imports:  nil,
                                                fake:     false,
                                                cgo:      false,
                                            },
                                        },
                                        fake: false,
                                        cgo:  false,
                                    },
                                    name:      "a",
                                    typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                    order_:    0x0,
                                    color_:    0x1,
                                    scopePos_: 0,
                                },
                                imported: &types.Package{
                                    path:  "implstub/testdata/src/a",
                                    name:  "a",
                                    scope: &types.Scope{
                                        parent:   &types.Scope{(CYCLIC REFERENCE)},
                                        children: nil,
                                        elems:    {
                                            ".inittask": &types.Var{
                                                object: types.object{
                                                    parent:    &!%v(DEPTH EXCEEDED),
                                                    pos:       0,
                                                    pkg:       &!%v(DEPTH EXCEEDED),
                                                    name:      ".inittask",
                                                    typ:       &!%v(DEPTH EXCEEDED),
                                                    order_:    0x0,
                                                    color_:    0x1,
                                                    scopePos_: 0,
                                                },
                                                embedded: false,
                                                isField:  false,
                                                used:     false,
                                            },
                                            "DB": &types.TypeName{(CYCLIC REFERENCE)},
                                        },
                                        pos:     0,
                                        end:     0,
                                        comment: "package \"implstub/testdata/src/a\"",
                                        isFunc:  false,
                                    },
                                    complete: true,
                                    imports:  nil,
                                    fake:     false,
                                    cgo:      false,
                                },
                                used: true,
                            },
                        },
                        pos:     65701,
                        end:     66210,
                        comment: "/Users/satoyu/go/src/github.com/YuuSatoh/implstub/src/b/b.go",
                        isFunc:  false,
                    },
                    children: nil,
                    elems:    {
                        "adb": &types.Var{(CYCLIC REFERENCE)},
                        "db":  &types.Var{
                            object: types.object{
                                parent: &types.Scope{(CYCLIC REFERENCE)},
                                pos:    65832,
                                pkg:    &types.Package{
                                    path:     "implstub/src/b",
                                    name:     "b",
                                    scope:    &types.Scope{(CYCLIC REFERENCE)},
                                    complete: true,
                                    imports:  {
                                        &types.Package{
                                            path:  "implstub/testdata/src/a",
                                            name:  "a",
                                            scope: &types.Scope{
                                                parent:   &types.Scope{(CYCLIC REFERENCE)},
                                                children: nil,
                                                elems:    {
                                                    ".inittask": &types.Var{
                                                        object: types.object{
                                                            parent:    &!%v(DEPTH EXCEEDED),
                                                            pos:       0,
                                                            pkg:       &!%v(DEPTH EXCEEDED),
                                                            name:      ".inittask",
                                                            typ:       &!%v(DEPTH EXCEEDED),
                                                            order_:    0x0,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        embedded: false,
                                                        isField:  false,
                                                        used:     false,
                                                    },
                                                    "DB": &types.TypeName{(CYCLIC REFERENCE)},
                                                },
                                                pos:     0,
                                                end:     0,
                                                comment: "package \"implstub/testdata/src/a\"",
                                                isFunc:  false,
                                            },
                                            complete: true,
                                            imports:  nil,
                                            fake:     false,
                                            cgo:      false,
                                        },
                                    },
                                    fake: false,
                                    cgo:  false,
                                },
                                name: "db",
                                typ:  &types.Named{
                                    info: 0x2,
                                    obj:  &types.TypeName{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       66196,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      "DB",
                                            typ:       &types.Named{(CYCLIC REFERENCE)},
                                            order_:    0x5,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                    },
                                    orig:       &types.Struct{},
                                    underlying: &types.Struct{},
                                    methods:    {
                                        &types.Func{
                                            object: types.object{
                                                parent: (*types.Scope)(nil),
                                                pos:    66009,
                                                pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                name:   "yey",
                                                typ:    &types.Signature{
                                                    scope:  &types.Scope{(CYCLIC REFERENCE)},
                                                    recv:   &types.Var{(CYCLIC REFERENCE)},
                                                    params: &types.Tuple{
                                                        vars: {
                                                            &types.Var{(CYCLIC REFERENCE)},
                                                            &types.Var{(CYCLIC REFERENCE)},
                                                        },
                                                    },
                                                    results: &types.Tuple{
                                                        vars: {
                                                            &types.Var{
                                                                object: types.object{
                                                                    parent:    (*types.Scope)(nil),
                                                                    pos:       66036,
                                                                    pkg:       &!%v(DEPTH EXCEEDED),
                                                                    name:      "",
                                                                    typ:       &!%v(DEPTH EXCEEDED),
                                                                    order_:    0x0,
                                                                    color_:    0x1,
                                                                    scopePos_: 0,
                                                                },
                                                                embedded: false,
                                                                isField:  false,
                                                                used:     true,
                                                            },
                                                            &types.Var{
                                                                object: types.object{
                                                                    parent:    (*types.Scope)(nil),
                                                                    pos:       66044,
                                                                    pkg:       &!%v(DEPTH EXCEEDED),
                                                                    name:      "",
                                                                    typ:       &!%v(DEPTH EXCEEDED),
                                                                    order_:    0x0,
                                                                    color_:    0x1,
                                                                    scopePos_: 0,
                                                                },
                                                                embedded: false,
                                                                isField:  false,
                                                                used:     true,
                                                            },
                                                        },
                                                    },
                                                    variadic: false,
                                                },
                                                order_:    0x3,
                                                color_:    0x1,
                                                scopePos_: 0,
                                            },
                                            hasPtrRecv: false,
                                        },
                                        &types.Func{
                                            object: types.object{
                                                parent: (*types.Scope)(nil),
                                                pos:    66113,
                                                pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                name:   "piyo",
                                                typ:    &types.Signature{
                                                    scope:  &types.Scope{(CYCLIC REFERENCE)},
                                                    recv:   &types.Var{(CYCLIC REFERENCE)},
                                                    params: &types.Tuple{
                                                        vars: {
                                                            &types.Var{(CYCLIC REFERENCE)},
                                                            &types.Var{(CYCLIC REFERENCE)},
                                                        },
                                                    },
                                                    results: &types.Tuple{
                                                        vars: {
                                                            &types.Var{
                                                                object: types.object{
                                                                    parent:    (*types.Scope)(nil),
                                                                    pos:       66135,
                                                                    pkg:       &!%v(DEPTH EXCEEDED),
                                                                    name:      "",
                                                                    typ:       &!%v(DEPTH EXCEEDED),
                                                                    order_:    0x0,
                                                                    color_:    0x1,
                                                                    scopePos_: 0,
                                                                },
                                                                embedded: false,
                                                                isField:  false,
                                                                used:     true,
                                                            },
                                                        },
                                                    },
                                                    variadic: false,
                                                },
                                                order_:    0x4,
                                                color_:    0x1,
                                                scopePos_: 0,
                                            },
                                            hasPtrRecv: false,
                                        },
                                    },
                                },
                                order_:    0x0,
                                color_:    0x1,
                                scopePos_: 0,
                            },
                            embedded: false,
                            isField:  false,
                            used:     true,
                        },
                    },
                    pos:     0,
                    end:     0,
                    comment: "function",
                    isFunc:  true,
                },
                pos: 65822,
                pkg: &types.Package{
                    path:  "implstub/src/b",
                    name:  "b",
                    scope: &types.Scope{
                        parent: &types.Scope{
                            parent:   (*types.Scope)(nil),
                            children: nil,
                            elems:    {
                                "append": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "append",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 0,
                                },
                                "bool": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "bool",
                                        typ:       &types.Basic{kind:1, info:1, name:"bool"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "byte": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "byte",
                                        typ:       &types.Basic{kind:8, info:6, name:"byte"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "cap": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "cap",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 1,
                                },
                                "close": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "close",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 2,
                                },
                                "complex": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "complex",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 3,
                                },
                                "complex128": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "complex128",
                                        typ:       &types.Basic{kind:16, info:16, name:"complex128"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "complex64": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "complex64",
                                        typ:       &types.Basic{kind:15, info:16, name:"complex64"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "copy": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "copy",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 4,
                                },
                                "delete": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "delete",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 5,
                                },
                                "error": &types.TypeName{
                                    object: types.object{
                                        parent: &types.Scope{(CYCLIC REFERENCE)},
                                        pos:    0,
                                        pkg:    (*types.Package)(nil),
                                        name:   "error",
                                        typ:    &types.Named{
                                            info:       0x0,
                                            obj:        &types.TypeName{(CYCLIC REFERENCE)},
                                            orig:       nil,
                                            underlying: &types.Interface{
                                                methods: {
                                                    &types.Func{
                                                        object: types.object{
                                                            parent:    (*types.Scope)(nil),
                                                            pos:       0,
                                                            pkg:       (*types.Package)(nil),
                                                            name:      "Error",
                                                            typ:       &!%v(DEPTH EXCEEDED),
                                                            order_:    0x0,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                },
                                                embeddeds:  nil,
                                                allMethods: {
                                                    &types.Func{
                                                        object: types.object{
                                                            parent:    (*types.Scope)(nil),
                                                            pos:       0,
                                                            pkg:       (*types.Package)(nil),
                                                            name:      "Error",
                                                            typ:       &!%v(DEPTH EXCEEDED),
                                                            order_:    0x0,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                },
                                            },
                                            methods: nil,
                                        },
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "false": &types.Const{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "false",
                                        typ:       &types.Basic{kind:19, info:65, name:"untyped bool"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    val: constant.boolVal(false),
                                },
                                "float32": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "float32",
                                        typ:       &types.Basic{kind:13, info:8, name:"float32"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "float64": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "float64",
                                        typ:       &types.Basic{kind:14, info:8, name:"float64"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "imag": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "imag",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 6,
                                },
                                "int": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "int",
                                        typ:       &types.Basic{kind:2, info:2, name:"int"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "int16": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "int16",
                                        typ:       &types.Basic{kind:4, info:2, name:"int16"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "int32": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "int32",
                                        typ:       &types.Basic{kind:5, info:2, name:"int32"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "int64": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "int64",
                                        typ:       &types.Basic{kind:6, info:2, name:"int64"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "int8": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "int8",
                                        typ:       &types.Basic{kind:3, info:2, name:"int8"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "iota": &types.Const{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "iota",
                                        typ:       &types.Basic{kind:20, info:66, name:"untyped int"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    val: constant.int64Val(0),
                                },
                                "len": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "len",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 7,
                                },
                                "make": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "make",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 8,
                                },
                                "new": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "new",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 9,
                                },
                                "nil": &types.Nil{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "nil",
                                        typ:       &types.Basic{kind:25, info:64, name:"untyped nil"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "panic": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "panic",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 10,
                                },
                                "print": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "print",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 11,
                                },
                                "println": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "println",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 12,
                                },
                                "real": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "real",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 13,
                                },
                                "recover": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "recover",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 14,
                                },
                                "rune": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "rune",
                                        typ:       &types.Basic{kind:5, info:2, name:"rune"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "string": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "string",
                                        typ:       &types.Basic{kind:17, info:32, name:"string"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "true": &types.Const{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "true",
                                        typ:       &types.Basic{kind:19, info:65, name:"untyped bool"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    val: constant.boolVal(true),
                                },
                                "uint": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "uint",
                                        typ:       &types.Basic{kind:7, info:6, name:"uint"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "uint16": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "uint16",
                                        typ:       &types.Basic{kind:9, info:6, name:"uint16"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "uint32": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "uint32",
                                        typ:       &types.Basic{kind:10, info:6, name:"uint32"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "uint64": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "uint64",
                                        typ:       &types.Basic{kind:11, info:6, name:"uint64"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "uint8": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "uint8",
                                        typ:       &types.Basic{kind:8, info:6, name:"uint8"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "uintptr": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "uintptr",
                                        typ:       &types.Basic{kind:12, info:6, name:"uintptr"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                            },
                            pos:     0,
                            end:     0,
                            comment: "universe",
                            isFunc:  false,
                        },
                        children: {
                            &types.Scope{(CYCLIC REFERENCE)},
                        },
                        elems: {
                            "DB": &types.TypeName{
                                object: types.object{
                                    parent:    &types.Scope{(CYCLIC REFERENCE)},
                                    pos:       66196,
                                    pkg:       &types.Package{(CYCLIC REFERENCE)},
                                    name:      "DB",
                                    typ:       &types.Named{(CYCLIC REFERENCE)},
                                    order_:    0x5,
                                    color_:    0x1,
                                    scopePos_: 0,
                                },
                            },
                            "Hoge": &types.TypeName{
                                object: types.object{
                                    parent: &types.Scope{(CYCLIC REFERENCE)},
                                    pos:    65756,
                                    pkg:    &types.Package{(CYCLIC REFERENCE)},
                                    name:   "Hoge",
                                    typ:    &types.Named{
                                        info: 0x2,
                                        obj:  &types.TypeName{(CYCLIC REFERENCE)},
                                        orig: &types.Interface{
                                            methods: {
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65817,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "piyo",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65774,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "yey",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                            },
                                            embeddeds:  nil,
                                            allMethods: {
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65817,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "piyo",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65774,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "yey",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                            },
                                        },
                                        underlying: &types.Interface{
                                            methods: {
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65817,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "piyo",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65774,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "yey",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                            },
                                            embeddeds:  nil,
                                            allMethods: {
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65817,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "piyo",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65774,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "yey",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                            },
                                        },
                                        methods: nil,
                                    },
                                    order_:    0x1,
                                    color_:    0x1,
                                    scopePos_: 0,
                                },
                            },
                            "f": &types.Func{
                                object: types.object{
                                    parent: &types.Scope{(CYCLIC REFERENCE)},
                                    pos:    65853,
                                    pkg:    &types.Package{(CYCLIC REFERENCE)},
                                    name:   "f",
                                    typ:    &types.Signature{
                                        scope:    &types.Scope{(CYCLIC REFERENCE)},
                                        recv:     (*types.Var)(nil),
                                        params:   (*types.Tuple)(nil),
                                        results:  (*types.Tuple)(nil),
                                        variadic: false,
                                    },
                                    order_:    0x2,
                                    color_:    0x1,
                                    scopePos_: 0,
                                },
                                hasPtrRecv: false,
                            },
                        },
                        pos:     0,
                        end:     0,
                        comment: "package \"implstub/src/b\"",
                        isFunc:  false,
                    },
                    complete: true,
                    imports:  {
                        &types.Package{
                            path:  "implstub/testdata/src/a",
                            name:  "a",
                            scope: &types.Scope{
                                parent:   &types.Scope{(CYCLIC REFERENCE)},
                                children: nil,
                                elems:    {
                                    ".inittask": &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      ".inittask",
                                            typ:       &types.Basic{kind:8, info:6, name:"uint8"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     false,
                                    },
                                    "DB": &types.TypeName{
                                        object: types.object{
                                            parent: &types.Scope{(CYCLIC REFERENCE)},
                                            pos:    168,
                                            pkg:    &types.Package{(CYCLIC REFERENCE)},
                                            name:   "DB",
                                            typ:    &types.Named{
                                                info:       0x0,
                                                obj:        &types.TypeName{(CYCLIC REFERENCE)},
                                                orig:       nil,
                                                underlying: &types.Struct{
                                                    fields: {
                                                    },
                                                    tags: {},
                                                },
                                                methods: nil,
                                            },
                                            order_:    0x0,
                                            color_:    0x0,
                                            scopePos_: 0,
                                        },
                                    },
                                },
                                pos:     0,
                                end:     0,
                                comment: "package \"implstub/testdata/src/a\"",
                                isFunc:  false,
                            },
                            complete: true,
                            imports:  nil,
                            fake:     false,
                            cgo:      false,
                        },
                    },
                    fake: false,
                    cgo:  false,
                },
                name: "adb",
                typ:  &types.Named{
                    info: 0x0,
                    obj:  &types.TypeName{
                        object: types.object{
                            parent: &types.Scope{
                                parent:   &types.Scope{(CYCLIC REFERENCE)},
                                children: nil,
                                elems:    {
                                    ".inittask": &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      ".inittask",
                                            typ:       &types.Basic{kind:8, info:6, name:"uint8"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     false,
                                    },
                                    "DB": &types.TypeName{(CYCLIC REFERENCE)},
                                },
                                pos:     0,
                                end:     0,
                                comment: "package \"implstub/testdata/src/a\"",
                                isFunc:  false,
                            },
                            pos:       168,
                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                            name:      "DB",
                            typ:       &types.Named{(CYCLIC REFERENCE)},
                            order_:    0x0,
                            color_:    0x0,
                            scopePos_: 0,
                        },
                    },
                    orig:       nil,
                    underlying: &types.Struct{
                        fields: {
                        },
                        tags: {},
                    },
                    methods: nil,
                },
                order_:    0x0,
                color_:    0x1,
                scopePos_: 0,
            },
            embedded: false,
            isField:  false,
            used:     true,
        },
        &types.Var{
            object: types.object{
                parent: &types.Scope{
                    parent: &types.Scope{
                        parent:   &types.Scope{(CYCLIC REFERENCE)},
                        children: {
                            &types.Scope{
                                parent:   &types.Scope{(CYCLIC REFERENCE)},
                                children: nil,
                                elems:    {
                                    "id": &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       65790,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      "id",
                                            typ:       &types.Basic{kind:6, info:2, name:"int64"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                    "msg": &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       65778,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      "msg",
                                            typ:       &types.Basic{kind:17, info:32, name:"string"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                },
                                pos:     0,
                                end:     0,
                                comment: "function",
                                isFunc:  true,
                            },
                            &types.Scope{(CYCLIC REFERENCE)},
                            &types.Scope{
                                parent:   &types.Scope{(CYCLIC REFERENCE)},
                                children: nil,
                                elems:    {
                                    "gopher": &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       65918,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      "gopher",
                                            typ:       &types.Basic{kind:2, info:2, name:"int"},
                                            order_:    0x0,
                                            color_:    0x0,
                                            scopePos_: 65928,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                },
                                pos:     65857,
                                end:     65995,
                                comment: "function",
                                isFunc:  true,
                            },
                            &types.Scope{
                                parent:   &types.Scope{(CYCLIC REFERENCE)},
                                children: nil,
                                elems:    {
                                    "d": &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       66003,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      "d",
                                            typ:       &types.Named{(CYCLIC REFERENCE)},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                    "id": &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       66025,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      "id",
                                            typ:       &types.Basic{kind:6, info:2, name:"int64"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                    "msg": &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       66013,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      "msg",
                                            typ:       &types.Basic{kind:17, info:32, name:"string"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                },
                                pos:     66051,
                                end:     66099,
                                comment: "function",
                                isFunc:  true,
                            },
                            &types.Scope{
                                parent:   &types.Scope{(CYCLIC REFERENCE)},
                                children: nil,
                                elems:    {
                                    "adb": &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       66118,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      "adb",
                                            typ:       &types.Named{(CYCLIC REFERENCE)},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                    "d": &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       66107,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      "d",
                                            typ:       &types.Named{(CYCLIC REFERENCE)},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                    "db": &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       66128,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      "db",
                                            typ:       &types.Named{(CYCLIC REFERENCE)},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                },
                                pos:     66141,
                                end:     66189,
                                comment: "function",
                                isFunc:  true,
                            },
                        },
                        elems: {
                            "a": &types.PkgName{
                                object: types.object{
                                    parent:    &types.Scope{(CYCLIC REFERENCE)},
                                    pos:       65722,
                                    pkg:       &types.Package{(CYCLIC REFERENCE)},
                                    name:      "a",
                                    typ:       &types.Basic{kind:0, info:0, name:"invalid type"},
                                    order_:    0x0,
                                    color_:    0x1,
                                    scopePos_: 0,
                                },
                                imported: &types.Package{(CYCLIC REFERENCE)},
                                used:     true,
                            },
                        },
                        pos:     65701,
                        end:     66210,
                        comment: "/Users/satoyu/go/src/github.com/YuuSatoh/implstub/src/b/b.go",
                        isFunc:  false,
                    },
                    children: nil,
                    elems:    {
                        "adb": &types.Var{(CYCLIC REFERENCE)},
                        "db":  &types.Var{(CYCLIC REFERENCE)},
                    },
                    pos:     0,
                    end:     0,
                    comment: "function",
                    isFunc:  true,
                },
                pos: 65832,
                pkg: &types.Package{
                    path:  "implstub/src/b",
                    name:  "b",
                    scope: &types.Scope{
                        parent: &types.Scope{
                            parent:   (*types.Scope)(nil),
                            children: nil,
                            elems:    {
                                "append": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "append",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 0,
                                },
                                "bool": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "bool",
                                        typ:       &types.Basic{kind:1, info:1, name:"bool"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "byte": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "byte",
                                        typ:       &types.Basic{kind:8, info:6, name:"byte"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "cap": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "cap",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 1,
                                },
                                "close": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "close",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 2,
                                },
                                "complex": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "complex",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 3,
                                },
                                "complex128": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "complex128",
                                        typ:       &types.Basic{kind:16, info:16, name:"complex128"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "complex64": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "complex64",
                                        typ:       &types.Basic{kind:15, info:16, name:"complex64"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "copy": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "copy",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 4,
                                },
                                "delete": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "delete",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 5,
                                },
                                "error": &types.TypeName{
                                    object: types.object{
                                        parent: &types.Scope{(CYCLIC REFERENCE)},
                                        pos:    0,
                                        pkg:    (*types.Package)(nil),
                                        name:   "error",
                                        typ:    &types.Named{
                                            info:       0x0,
                                            obj:        &types.TypeName{(CYCLIC REFERENCE)},
                                            orig:       nil,
                                            underlying: &types.Interface{
                                                methods: {
                                                    &types.Func{
                                                        object: types.object{
                                                            parent:    (*types.Scope)(nil),
                                                            pos:       0,
                                                            pkg:       (*types.Package)(nil),
                                                            name:      "Error",
                                                            typ:       &!%v(DEPTH EXCEEDED),
                                                            order_:    0x0,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                },
                                                embeddeds:  nil,
                                                allMethods: {
                                                    &types.Func{
                                                        object: types.object{
                                                            parent:    (*types.Scope)(nil),
                                                            pos:       0,
                                                            pkg:       (*types.Package)(nil),
                                                            name:      "Error",
                                                            typ:       &!%v(DEPTH EXCEEDED),
                                                            order_:    0x0,
                                                            color_:    0x1,
                                                            scopePos_: 0,
                                                        },
                                                        hasPtrRecv: false,
                                                    },
                                                },
                                            },
                                            methods: nil,
                                        },
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "false": &types.Const{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "false",
                                        typ:       &types.Basic{kind:19, info:65, name:"untyped bool"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    val: constant.boolVal(false),
                                },
                                "float32": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "float32",
                                        typ:       &types.Basic{kind:13, info:8, name:"float32"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "float64": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "float64",
                                        typ:       &types.Basic{kind:14, info:8, name:"float64"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "imag": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "imag",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 6,
                                },
                                "int": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "int",
                                        typ:       &types.Basic{kind:2, info:2, name:"int"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "int16": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "int16",
                                        typ:       &types.Basic{kind:4, info:2, name:"int16"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "int32": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "int32",
                                        typ:       &types.Basic{kind:5, info:2, name:"int32"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "int64": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "int64",
                                        typ:       &types.Basic{kind:6, info:2, name:"int64"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "int8": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "int8",
                                        typ:       &types.Basic{kind:3, info:2, name:"int8"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "iota": &types.Const{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "iota",
                                        typ:       &types.Basic{kind:20, info:66, name:"untyped int"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    val: constant.int64Val(0),
                                },
                                "len": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "len",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 7,
                                },
                                "make": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "make",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 8,
                                },
                                "new": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "new",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 9,
                                },
                                "nil": &types.Nil{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "nil",
                                        typ:       &types.Basic{kind:25, info:64, name:"untyped nil"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "panic": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "panic",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 10,
                                },
                                "print": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "print",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 11,
                                },
                                "println": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "println",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 12,
                                },
                                "real": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "real",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 13,
                                },
                                "recover": &types.Builtin{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "recover",
                                        typ:       &types.Basic{(CYCLIC REFERENCE)},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    id: 14,
                                },
                                "rune": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "rune",
                                        typ:       &types.Basic{kind:5, info:2, name:"rune"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "string": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "string",
                                        typ:       &types.Basic{kind:17, info:32, name:"string"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "true": &types.Const{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "true",
                                        typ:       &types.Basic{kind:19, info:65, name:"untyped bool"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                    val: constant.boolVal(true),
                                },
                                "uint": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "uint",
                                        typ:       &types.Basic{kind:7, info:6, name:"uint"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "uint16": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "uint16",
                                        typ:       &types.Basic{kind:9, info:6, name:"uint16"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "uint32": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "uint32",
                                        typ:       &types.Basic{kind:10, info:6, name:"uint32"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "uint64": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "uint64",
                                        typ:       &types.Basic{kind:11, info:6, name:"uint64"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "uint8": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "uint8",
                                        typ:       &types.Basic{kind:8, info:6, name:"uint8"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                                "uintptr": &types.TypeName{
                                    object: types.object{
                                        parent:    &types.Scope{(CYCLIC REFERENCE)},
                                        pos:       0,
                                        pkg:       (*types.Package)(nil),
                                        name:      "uintptr",
                                        typ:       &types.Basic{kind:12, info:6, name:"uintptr"},
                                        order_:    0x0,
                                        color_:    0x1,
                                        scopePos_: 0,
                                    },
                                },
                            },
                            pos:     0,
                            end:     0,
                            comment: "universe",
                            isFunc:  false,
                        },
                        children: {
                            &types.Scope{(CYCLIC REFERENCE)},
                        },
                        elems: {
                            "DB": &types.TypeName{
                                object: types.object{
                                    parent:    &types.Scope{(CYCLIC REFERENCE)},
                                    pos:       66196,
                                    pkg:       &types.Package{(CYCLIC REFERENCE)},
                                    name:      "DB",
                                    typ:       &types.Named{(CYCLIC REFERENCE)},
                                    order_:    0x5,
                                    color_:    0x1,
                                    scopePos_: 0,
                                },
                            },
                            "Hoge": &types.TypeName{
                                object: types.object{
                                    parent: &types.Scope{(CYCLIC REFERENCE)},
                                    pos:    65756,
                                    pkg:    &types.Package{(CYCLIC REFERENCE)},
                                    name:   "Hoge",
                                    typ:    &types.Named{
                                        info: 0x2,
                                        obj:  &types.TypeName{(CYCLIC REFERENCE)},
                                        orig: &types.Interface{
                                            methods: {
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65817,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "piyo",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65774,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "yey",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                            },
                                            embeddeds:  nil,
                                            allMethods: {
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65817,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "piyo",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65774,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "yey",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                            },
                                        },
                                        underlying: &types.Interface{
                                            methods: {
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65817,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "piyo",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65774,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "yey",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                            },
                                            embeddeds:  nil,
                                            allMethods: {
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65817,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "piyo",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                                &types.Func{
                                                    object: types.object{
                                                        parent: (*types.Scope)(nil),
                                                        pos:    65774,
                                                        pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                        name:   "yey",
                                                        typ:    &types.Signature{
                                                            scope:    &!%v(DEPTH EXCEEDED),
                                                            recv:     &!%v(DEPTH EXCEEDED),
                                                            params:   &!%v(DEPTH EXCEEDED),
                                                            results:  &!%v(DEPTH EXCEEDED),
                                                            variadic: false,
                                                        },
                                                        order_:    0x0,
                                                        color_:    0x1,
                                                        scopePos_: 0,
                                                    },
                                                    hasPtrRecv: false,
                                                },
                                            },
                                        },
                                        methods: nil,
                                    },
                                    order_:    0x1,
                                    color_:    0x1,
                                    scopePos_: 0,
                                },
                            },
                            "f": &types.Func{
                                object: types.object{
                                    parent: &types.Scope{(CYCLIC REFERENCE)},
                                    pos:    65853,
                                    pkg:    &types.Package{(CYCLIC REFERENCE)},
                                    name:   "f",
                                    typ:    &types.Signature{
                                        scope:    &types.Scope{(CYCLIC REFERENCE)},
                                        recv:     (*types.Var)(nil),
                                        params:   (*types.Tuple)(nil),
                                        results:  (*types.Tuple)(nil),
                                        variadic: false,
                                    },
                                    order_:    0x2,
                                    color_:    0x1,
                                    scopePos_: 0,
                                },
                                hasPtrRecv: false,
                            },
                        },
                        pos:     0,
                        end:     0,
                        comment: "package \"implstub/src/b\"",
                        isFunc:  false,
                    },
                    complete: true,
                    imports:  {
                        &types.Package{
                            path:  "implstub/testdata/src/a",
                            name:  "a",
                            scope: &types.Scope{
                                parent:   &types.Scope{(CYCLIC REFERENCE)},
                                children: nil,
                                elems:    {
                                    ".inittask": &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       0,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      ".inittask",
                                            typ:       &types.Basic{kind:8, info:6, name:"uint8"},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     false,
                                    },
                                    "DB": &types.TypeName{(CYCLIC REFERENCE)},
                                },
                                pos:     0,
                                end:     0,
                                comment: "package \"implstub/testdata/src/a\"",
                                isFunc:  false,
                            },
                            complete: true,
                            imports:  nil,
                            fake:     false,
                            cgo:      false,
                        },
                    },
                    fake: false,
                    cgo:  false,
                },
                name: "db",
                typ:  &types.Named{
                    info: 0x2,
                    obj:  &types.TypeName{
                        object: types.object{
                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                            pos:       66196,
                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                            name:      "DB",
                            typ:       &types.Named{(CYCLIC REFERENCE)},
                            order_:    0x5,
                            color_:    0x1,
                            scopePos_: 0,
                        },
                    },
                    orig:       &types.Struct{},
                    underlying: &types.Struct{},
                    methods:    {
                        &types.Func{
                            object: types.object{
                                parent: (*types.Scope)(nil),
                                pos:    66009,
                                pkg:    &types.Package{(CYCLIC REFERENCE)},
                                name:   "yey",
                                typ:    &types.Signature{
                                    scope: &types.Scope{(CYCLIC REFERENCE)},
                                    recv:  &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       66003,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      "d",
                                            typ:       &types.Named{(CYCLIC REFERENCE)},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                    params: &types.Tuple{
                                        vars: {
                                            &types.Var{
                                                object: types.object{
                                                    parent:    &types.Scope{(CYCLIC REFERENCE)},
                                                    pos:       66013,
                                                    pkg:       &types.Package{(CYCLIC REFERENCE)},
                                                    name:      "msg",
                                                    typ:       &types.Basic{kind:17, info:32, name:"string"},
                                                    order_:    0x0,
                                                    color_:    0x1,
                                                    scopePos_: 0,
                                                },
                                                embedded: false,
                                                isField:  false,
                                                used:     true,
                                            },
                                            &types.Var{
                                                object: types.object{
                                                    parent:    &types.Scope{(CYCLIC REFERENCE)},
                                                    pos:       66025,
                                                    pkg:       &types.Package{(CYCLIC REFERENCE)},
                                                    name:      "id",
                                                    typ:       &types.Basic{kind:6, info:2, name:"int64"},
                                                    order_:    0x0,
                                                    color_:    0x1,
                                                    scopePos_: 0,
                                                },
                                                embedded: false,
                                                isField:  false,
                                                used:     true,
                                            },
                                        },
                                    },
                                    results: &types.Tuple{
                                        vars: {
                                            &types.Var{
                                                object: types.object{
                                                    parent:    (*types.Scope)(nil),
                                                    pos:       66036,
                                                    pkg:       &types.Package{(CYCLIC REFERENCE)},
                                                    name:      "",
                                                    typ:       &types.Basic{kind:17, info:32, name:"string"},
                                                    order_:    0x0,
                                                    color_:    0x1,
                                                    scopePos_: 0,
                                                },
                                                embedded: false,
                                                isField:  false,
                                                used:     true,
                                            },
                                            &types.Var{
                                                object: types.object{
                                                    parent: (*types.Scope)(nil),
                                                    pos:    66044,
                                                    pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                    name:   "",
                                                    typ:    &types.Named{
                                                        info:       0x0,
                                                        obj:        &types.TypeName{(CYCLIC REFERENCE)},
                                                        orig:       nil,
                                                        underlying: &types.Interface{
                                                            methods: {
                                                                &types.Func{
                                                                    object: types.object{
                                                                        parent:    (*types.Scope)(nil),
                                                                        pos:       0,
                                                                        pkg:       (*types.Package)(nil),
                                                                        name:      "Error",
                                                                        typ:       &!%v(DEPTH EXCEEDED),
                                                                        order_:    0x0,
                                                                        color_:    0x1,
                                                                        scopePos_: 0,
                                                                    },
                                                                    hasPtrRecv: false,
                                                                },
                                                            },
                                                            embeddeds:  nil,
                                                            allMethods: {
                                                                &types.Func{
                                                                    object: types.object{
                                                                        parent:    (*types.Scope)(nil),
                                                                        pos:       0,
                                                                        pkg:       (*types.Package)(nil),
                                                                        name:      "Error",
                                                                        typ:       &!%v(DEPTH EXCEEDED),
                                                                        order_:    0x0,
                                                                        color_:    0x1,
                                                                        scopePos_: 0,
                                                                    },
                                                                    hasPtrRecv: false,
                                                                },
                                                            },
                                                        },
                                                        methods: nil,
                                                    },
                                                    order_:    0x0,
                                                    color_:    0x1,
                                                    scopePos_: 0,
                                                },
                                                embedded: false,
                                                isField:  false,
                                                used:     true,
                                            },
                                        },
                                    },
                                    variadic: false,
                                },
                                order_:    0x3,
                                color_:    0x1,
                                scopePos_: 0,
                            },
                            hasPtrRecv: false,
                        },
                        &types.Func{
                            object: types.object{
                                parent: (*types.Scope)(nil),
                                pos:    66113,
                                pkg:    &types.Package{(CYCLIC REFERENCE)},
                                name:   "piyo",
                                typ:    &types.Signature{
                                    scope: &types.Scope{(CYCLIC REFERENCE)},
                                    recv:  &types.Var{
                                        object: types.object{
                                            parent:    &types.Scope{(CYCLIC REFERENCE)},
                                            pos:       66107,
                                            pkg:       &types.Package{(CYCLIC REFERENCE)},
                                            name:      "d",
                                            typ:       &types.Named{(CYCLIC REFERENCE)},
                                            order_:    0x0,
                                            color_:    0x1,
                                            scopePos_: 0,
                                        },
                                        embedded: false,
                                        isField:  false,
                                        used:     true,
                                    },
                                    params: &types.Tuple{
                                        vars: {
                                            &types.Var{
                                                object: types.object{
                                                    parent:    &types.Scope{(CYCLIC REFERENCE)},
                                                    pos:       66118,
                                                    pkg:       &types.Package{(CYCLIC REFERENCE)},
                                                    name:      "adb",
                                                    typ:       &types.Named{(CYCLIC REFERENCE)},
                                                    order_:    0x0,
                                                    color_:    0x1,
                                                    scopePos_: 0,
                                                },
                                                embedded: false,
                                                isField:  false,
                                                used:     true,
                                            },
                                            &types.Var{
                                                object: types.object{
                                                    parent:    &types.Scope{(CYCLIC REFERENCE)},
                                                    pos:       66128,
                                                    pkg:       &types.Package{(CYCLIC REFERENCE)},
                                                    name:      "db",
                                                    typ:       &types.Named{(CYCLIC REFERENCE)},
                                                    order_:    0x0,
                                                    color_:    0x1,
                                                    scopePos_: 0,
                                                },
                                                embedded: false,
                                                isField:  false,
                                                used:     true,
                                            },
                                        },
                                    },
                                    results: &types.Tuple{
                                        vars: {
                                            &types.Var{
                                                object: types.object{
                                                    parent: (*types.Scope)(nil),
                                                    pos:    66135,
                                                    pkg:    &types.Package{(CYCLIC REFERENCE)},
                                                    name:   "",
                                                    typ:    &types.Named{
                                                        info:       0x0,
                                                        obj:        &types.TypeName{(CYCLIC REFERENCE)},
                                                        orig:       nil,
                                                        underlying: &types.Interface{
                                                            methods: {
                                                                &types.Func{
                                                                    object: types.object{
                                                                        parent:    (*types.Scope)(nil),
                                                                        pos:       0,
                                                                        pkg:       (*types.Package)(nil),
                                                                        name:      "Error",
                                                                        typ:       &!%v(DEPTH EXCEEDED),
                                                                        order_:    0x0,
                                                                        color_:    0x1,
                                                                        scopePos_: 0,
                                                                    },
                                                                    hasPtrRecv: false,
                                                                },
                                                            },
                                                            embeddeds:  nil,
                                                            allMethods: {
                                                                &types.Func{
                                                                    object: types.object{
                                                                        parent:    (*types.Scope)(nil),
                                                                        pos:       0,
                                                                        pkg:       (*types.Package)(nil),
                                                                        name:      "Error",
                                                                        typ:       &!%v(DEPTH EXCEEDED),
                                                                        order_:    0x0,
                                                                        color_:    0x1,
                                                                        scopePos_: 0,
                                                                    },
                                                                    hasPtrRecv: false,
                                                                },
                                                            },
                                                        },
                                                        methods: nil,
                                                    },
                                                    order_:    0x0,
                                                    color_:    0x1,
                                                    scopePos_: 0,
                                                },
                                                embedded: false,
                                                isField:  false,
                                                used:     true,
                                            },
                                        },
                                    },
                                    variadic: false,
                                },
                                order_:    0x4,
                                color_:    0x1,
                                scopePos_: 0,
                            },
                            hasPtrRecv: false,
                        },
                    },
                },
                order_:    0x0,
                color_:    0x1,
                scopePos_: 0,
            },
            embedded: false,
            isField:  false,
            used:     true,
        },
    },
}
false
// hoge method
func (recv *DB) piyo(adb implstub/testdata/src/a.DB, db DB)(error){
panic("not implemented") // TODO: Implement
}


